#!/bin/bash
#
# Yet another Dynamic IP controller - Script to execute
# commands/actions upon WAN IP changes.
#
# Author:	Th. Walrant <yadynip.tgc@walrant.net>
# Date:		May 2014
#
# Detection:

# The tool accepts multiple ways to detect the WAN IP address by
# executing different checkip scripts until an IP address is found
# (See the checkip.d folder for examples of available
# methods/scripts). You can add your own method and/or disable some
# scripts by deleting the script file or by updating the script to
# return/exit without returning an IP address.
#
# Actions:
#
# Once the IP address is detected, the tool check all available
# actions (located in folder actions.d). It executes the action script
# only if the IP address has changed. The IP address is cached per
# action upon succesfull execution of the action, so that the tool is
# able to only repeat the action who failed at the previous attempt.
#
name=yadynip
installdir=$(dirname $(readlink -f $0))
installdir=${installdir%%/bin}

sharedir=$installdir/share/$name
etcdir=$installdir/etc/$name
config=$installdir/etc/$name.conf

# Default values
logging=none
quiet=off

for conf in $config ~/.$name.conf ./$name.conf; do
    if [ -f $conf ]; then
	. $conf
    fi
done

checkipdir=$etcdir/checkip.d
actionsdir=$etcdir/actions.d
ipcachedir=$sharedir/ipcaches

function log() {
    local mode=$1
    shift;
    [ -z "$logfile" ] || [ "$logging" == "none" ] && return;
    [ "$logging" != "debug" ] && mode="";
    [ "$logging" == "debug" ] && mode="[DEBUG]";
    echo $(date -R) $mode $* >> $logfile
}
function verbose() {
    [ "$quiet" != "on" ] && return;
    echo $*
}
function verbose_log() {
    local mode=$1
    shift;
    log $mode $*
    verbose $*
}

## Get my WAN IP address using available checkip scripts
wanip=
for f in $checkipdir/* 99ignore~; do
    # Skip backup file and folder
    [ -d $f ] && continue
    echo $f | grep -Pqe "~$" && continue

    # Get my WAN IP
    wanip=$($f)
    verbose_log debug $f returns $wanip;

    # Stop here if an IP address is found
    test -n "$wanip" && break
done

## Stop here if no WAN IP Address is found
test -z "$wanip" && echo "$name: No WAN IP Address found" && exit;

verbose_log verbose "WAN IP Address= " $wanip

## Perform actions with detected IP address
for f in $actionsdir/* 99ignore~; do
    # Skip backup file and folder
    [ -d $f ] && continue
    echo $f | grep -Pqe "~$" && continue

    # Get and check last known IP address for this action
    lastip=
    ipcache=$ipcachedir/$(basename $f)
    [ -f $ipcache ] && lastip=$(cat $ipcache)

    # Skip this action if no new IP address
    [ "$lastip" == "$wanip" ] && continue

    # Execute the action(wanip, logfile), abort upon error.
    log verbose Execute $f $wanip
    $f $wanip $logfile || continue

    # Update known IP address for this action
    echo $wanip > $ipcache
done
